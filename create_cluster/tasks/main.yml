---
# tasks file for create_cluster

# - name: List clusters
#   uri:
#     url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}"
#     method: GET
#     status_code: [200, 201]
#     return_content: True
#   when: create|bool == True
#   register: http_reply

# - debug:
#     msg:
#       - "Cluster: {{ item.name }}"
#       - "Cluster ID: {{ item.id }}"
#   loop: "{{ http_reply.json }}"
#   when: debug and create|bool == True

# TODO: use the variable for cluster_network_host_prefix
- name: Create cluster
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}"
    method: POST
    url_username: "{{ HTTP_AUTH_USERNAME }}"
    url_password: "{{ HTTP_AUTH_PASSWORD }}"
    body_format: json
    status_code: [201]
    return_content: True
    body: {
        "name": "{{ CLUSTER_NAME }}",
        "openshift_version": "{{ OPENSHIFT_VERSION }}",
        "base_dns_domain": "{{ BASE_DNS_DOMAIN }}",
        "cluster_network_cidr": "{{ CLUSTER_NETWORK_CIDR }}",
        "cluster_network_host_prefix": 23,
        "service_network_cidr": "{{ SERVICE_NETWORK_CIDR }}",
        "ingress_vip": "{{ INGRESS_VIP }}",
        "pull_secret": "{{ PULL_SECRET | to_json }}",
        "ssh_public_key": "{{ SSH_PUBLIC_KEY }}",
        "vip_dhcp_allocation": "{{ VIP_DHCP_ALLOCATION | lower | bool }}",
        "api_vip": "{{ API_VIP }}",
        "http_proxy": "{{ HTTP_PROXY }}",
        "https_proxy": "{{ HTTPS_PROXY }}",
        "no_proxy": "{{ NO_PROXY }}"
    }
  when: create|bool == True
  register: http_reply
  
- debug: 
    var: http_reply.json
  when: debug|bool == True

- name: Set the cluster ID
  set_fact:
    cluster_id: "{{ http_reply.json.id }}"
  when: create|bool == True

# TODO: Patch the cluster for air gap deployment

# Show install-config file
- name: Get install-config file
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/install-config"
    method: GET
    status_code: [200]
    return_content: True
  when: create|bool == True
  register: install_config

- debug: 
    var: install_config.json
#  when: airgap and debug | bool == True

# - local_action: copy content={{ install_config.json }} dest=install-config.txt
#   when: create|bool == True

- name: Load air gap patch config
  set_fact:
    patch_install_config: "{{ lookup('template', 'air_gap_config.j2') | from_yaml | to_json(ensure_ascii=False) | string }}"

- debug: 
    var: patch_install_config

- name: Patch cluster install config
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/install-config"
    method: PATCH
    status_code: [201]
    return_content: True
    body_format: json
    body: "{{ patch_install_config | to_json(ensure_ascii=False) | string }}"
  when: airgap|bool == True
  register: http_reply

    # body: "{{ patch_install_config | to_json(ensure_ascii=False) | string }}"

- debug:
    var: http_reply
#   when: airgap & debug | bool == True

# Show install-config file after patch
- name: Get install-config file
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/install-config"
    method: GET
    status_code: [200]
    return_content: True
  when: create|bool == True
  register: install_config

- debug: 
    var: install_config.json
#  when: airgap and debug | bool == True

# additionalTrustBundle: | 
#   -----BEGIN CERTIFICATE-----
#   ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
#   -----END CERTIFICATE-----
# Record the imageContentSources section from the output of the ./poc mirror command. 
# imageContentSources: 
# - mirrors:
#   - <bastion_host_name>:5000/<repo_name>/release
#   source: quay.io/openshift-release-dev/ocp-release
# - mirrors:
#   - <bastion_host_name>:5000/<repo_name>/release
#   source: registry.svc.ci.openshift.org/ocp/release


# # Show cluster information
# - name: List clusters
#   uri:
#     url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}"
#     method: GET
#     status_code: [200, 201]
#     return_content: True
#   when: create|bool == True
#   register: http_reply

# - debug:
#     msg:
#       - "Cluster: {{ item.name }}"
#       - "Cluster ID: {{ item.id }}"
#   loop: "{{ http_reply.json }}"
#   when: create|bool == True

- local_action: copy content={{ install_config.json }} dest=patched-config.txt
  when: create|bool == True

- local_action: copy content={{ cluster_id }} dest=cluster.txt
  when: create|bool == True