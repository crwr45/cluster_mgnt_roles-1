---
#
# Virtual Redfish BMC
# https://docs.openstack.org/sushy-tools/latest/user/dynamic-emulator.html#uefi-boot
#
- name: Mount Live ISO, Boot into Live ISO (KVM only)
  block:

    - name: Identify System Manager
      uri:
        url: "http://{{ hostvars[item]['bmc_address'] }}/redfish/v1/Systems/{{ hostvars[item]['inventory_hostname'] }}"
        user: "{{ hostvars[item]['bmc_user'] }}"
        password: "{{ hostvars[item]['bmc_password'] }}"
        method: GET
        status_code: [200, 201]
        validate_certs: no
        return_content: yes
      register: http_reply

    - debug:
        var: http_reply
      when: debug|bool == True

    - name: KVM Set System UUID
      set_fact:
        system_uuid: "{{ http_reply.json['@odata.id'] }}"
        system_manager: "{{ http_reply.json.Links.ManagedBy[0]['@odata.id'] }}"

    - name: KVM Eject Virtual Media (if any)
      uri:
        url: "http://{{ hostvars[item]['bmc_address'] }}{{ system_manager }}/VirtualMedia/Cd/Actions/VirtualMedia.EjectMedia"
        user: "{{ hostvars[item]['bmc_user'] }}"
        password: "{{ hostvars[item]['bmc_password'] }}"
        method: POST
        body_format: json
        body: {}
        status_code: [200, 204]
        validate_certs: no
        return_content: yes
      register: redfish_reply
      ignore_errors: yes

    - debug:
        var: redfish_reply
      when: debug|bool == True

    - name: KVM Insert Virtual Media
      uri:
        url: "http://{{ hostvars[item]['bmc_address'] }}{{ system_manager }}/VirtualMedia/Cd/Actions/VirtualMedia.InsertMedia"
        user: "{{ hostvars[item]['bmc_user'] }}"
        password: "{{ hostvars[item]['bmc_password'] }}"
        method: POST
        body_format: json
        body: {"Image":"{{ boot_iso_url }}", "Inserted": true}
        status_code: [200, 204]
        force_basic_auth: no
        validate_certs: no
        return_content: yes
      register: redfish_reply
      until: "redfish_reply.status == 204"
      retries: 20
      delay: 30

    - debug:
        var: redfish_reply
      when: debug|bool == True

    - name: KVM Verify Virtual Media
      uri:
        url: "http://{{ hostvars[item]['bmc_address'] }}{{ system_manager }}/VirtualMedia/Cd"
        user: "{{ hostvars[item]['bmc_user'] }}"
        password: "{{ hostvars[item]['bmc_password'] }}"
        method: GET
        status_code: [200, 201]
        validate_certs: no
        return_content: yes
      register: redfish_reply
      when: debug|bool == True

    - debug:
        var: redfish_reply
      when: debug|bool == True

    - name: KVM Set OneTimeBoot Virtual Media
      uri:
        url: "http://{{ hostvars[item]['bmc_address'] }}{{ system_uuid }}"
        user: "{{ hostvars[item]['bmc_user'] }}"
        password: "{{ hostvars[item]['bmc_password'] }}"
        method: PATCH
        body_format: json
        body: {"Boot":{"BootSourceOverrideTarget":"Cd","BootSourceOverrideMode":"UEFI","BootSourceOverrideEnabled":"Continuous"}}
        status_code: [200, 204]
        force_basic_auth: no
        validate_certs: no
        return_content: yes
      register: redfish_reply

    - debug:
        var: redfish_reply
      when: debug|bool == True

    - name: KVM Verify System Power State
      uri:
        url: "http://{{ hostvars[item]['bmc_address'] }}{{ system_uuid }}"
        user: "{{ hostvars[item]['bmc_user'] }}"
        password: "{{ hostvars[item]['bmc_password'] }}"
        method: GET
        status_code: [200, 201]
        validate_certs: no
        return_content: yes
      register: redfish_reply
      when: debug|bool == True

    - debug:
        var: redfish_reply
      when: debug|bool == True

    - name: KVM Force Restart System
      uri:
        url: "http://{{ hostvars[item]['bmc_address'] }}{{ system_uuid }}/Actions/ComputerSystem.Reset"
        user: "{{ hostvars[item]['bmc_user'] }}"
        password: "{{ hostvars[item]['bmc_password'] }}"
        method: POST
        body_format: json
        body: {"ResetType":"ForceRestart"}
        status_code: [200, 204]
        force_basic_auth: no
        validate_certs: no
        return_content: yes
      register: redfish_restart
      when: redfish_reply.json.PowerState == "On"

    - name: KVM Force Power On System
      uri:
        url: "http://{{ hostvars[item]['bmc_address'] }}{{ system_uuid }}/Actions/ComputerSystem.Reset"
        user: "{{ hostvars[item]['bmc_user'] }}"
        password: "{{ hostvars[item]['bmc_password'] }}"
        method: POST
        body_format: json
        body: {"ResetType":"ForceOn"}
        status_code: [200, 204]
        force_basic_auth: no
        validate_certs: no
        return_content: yes
      register: redfish_poweron
      when: redfish_reply.json.PowerState == "Off"

    - name: Pause for 30 seconds to allow the system to boot
      pause:
        seconds: 30

    - name: KVM Verify System Power State is On
      uri:
        url: "http://{{ hostvars[item]['bmc_address'] }}{{ system_uuid }}"
        user: "{{ hostvars[item]['bmc_user'] }}"
        password: "{{ hostvars[item]['bmc_password'] }}"
        method: GET
        status_code: [200, 201]
        validate_certs: no
        return_content: yes
      register: redfish_reply
      until: redfish_reply.json.PowerState == "On"
      retries: 3
      delay: 30

    - name: KVM Set Next Boot from HDD
      uri:
        url: "http://{{ hostvars[item]['bmc_address'] }}{{ system_uuid }}"
        user: "{{ hostvars[item]['bmc_user'] }}"
        password: "{{ hostvars[item]['bmc_password'] }}"
        method: PATCH
        body_format: json
        body: {"Boot":{"BootSourceOverrideTarget":"Hdd","BootSourceOverrideMode":"UEFI","BootSourceOverrideEnabled":"Continuous"}}
        status_code: [200, 204]
        force_basic_auth: no
        validate_certs: no
        return_content: yes
      register: redfish_reply

    - debug:
        var: redfish_reply
      when: debug|bool == True